{
  "hash": "43c903825b0a931d7aac7dcc2e5ca146",
  "result": {
    "markdown": "---\ntitle: \"Lost in Pandas - Part 4\"\nauthor: \"Nodar Okroshiashvili\"\ndate: \"2020-04-29\"\ncategories: [Data Science]\ntags: [Pandas, Data Analysis]\nkeywords: [pandas, python, data analysis, pandas tips and tricks, advance pandas, data transformation in pandas]\nexecute: \n  freeze: auto\n---\n\n# Introduction\n\nI'll show how to assign new value for each unique group in Pandas DataFrame.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\n```\n:::\n\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\ndata = {\n    \"ID\": [1, 1, 1, 2, 2, 3, 3],\n    \"class\": [\"Lower\", \"Moderate\", \"Moderate\", \"Lower\", \"High\", \"High\", \"Lower\"]\n}\n\ndf = pd.DataFrame(data)\n\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ID</th>\n      <th>class</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>Lower</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>Moderate</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>Moderate</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2</td>\n      <td>Lower</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2</td>\n      <td>High</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>3</td>\n      <td>High</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>3</td>\n      <td>Lower</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nNow, let assign new values according to ```class``` column and then rearrange ```class``` column in order to assign new group names.\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nvalue_map = {\"Lower\": 33, \"Moderate\": 34, \"High\": 40}\n\ndf[\"new\"] = df[\"class\"].map(value_map)\n\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ID</th>\n      <th>class</th>\n      <th>new</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>Lower</td>\n      <td>33</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>Moderate</td>\n      <td>34</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>Moderate</td>\n      <td>34</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2</td>\n      <td>Lower</td>\n      <td>33</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2</td>\n      <td>High</td>\n      <td>40</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>3</td>\n      <td>High</td>\n      <td>40</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>3</td>\n      <td>Lower</td>\n      <td>33</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\ndf[\"Max\"] = (df.set_index(\"class\")\n                .groupby(\"ID\")[\"new\"]\n                .transform(\"idxmax\").values)\n\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ID</th>\n      <th>class</th>\n      <th>new</th>\n      <th>Max</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>Lower</td>\n      <td>33</td>\n      <td>Moderate</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>Moderate</td>\n      <td>34</td>\n      <td>Moderate</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>Moderate</td>\n      <td>34</td>\n      <td>Moderate</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2</td>\n      <td>Lower</td>\n      <td>33</td>\n      <td>High</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2</td>\n      <td>High</td>\n      <td>40</td>\n      <td>High</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>3</td>\n      <td>High</td>\n      <td>40</td>\n      <td>High</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>3</td>\n      <td>Lower</td>\n      <td>33</td>\n      <td>High</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\ndf[\"Max\"] = df[\"Max\"].mask(df[\"ID\"].duplicated(), \"\")\n\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ID</th>\n      <th>class</th>\n      <th>new</th>\n      <th>Max</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>Lower</td>\n      <td>33</td>\n      <td>Moderate</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>Moderate</td>\n      <td>34</td>\n      <td></td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>Moderate</td>\n      <td>34</td>\n      <td></td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2</td>\n      <td>Lower</td>\n      <td>33</td>\n      <td>High</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2</td>\n      <td>High</td>\n      <td>40</td>\n      <td></td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>3</td>\n      <td>High</td>\n      <td>40</td>\n      <td>High</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>3</td>\n      <td>Lower</td>\n      <td>33</td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "pandas_tips_and_tricks_4_files/figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}